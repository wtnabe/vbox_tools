#! /usr/bin/env rake -f
# -*- mode: ruby; coding: utf-8 -*-

unless ( ENV['PATH'].split( File::PATH_SEPARATOR ).include?( File.dirname( __FILE__ ) ) )
  $LOAD_PATH << File.expand_path("../lib", File.dirname(__FILE__))
end
require 'vbox_config_admin'

#
# global tasks
#
namespace :vbox do
  desc "show VirtualBox version number"
  task :version do
    puts VboxConfigAdmin.new.version
  end

  desc "backup all config files"
  task :backup_configs do
    v = VboxConfigAdmin.new
    v.machines.each { |m|
      v.create_backup( m )
      puts "Backup completed #{m}"
    }
    v.create_backup
    puts "Backup completed #{File.basename( v.config_file )}"
  end

  desc "clear all backup files"
  task :clear_backups do
    v = VboxConfigAdmin.new
    v.machines.each { |m|
      v.clear_backups( m )
      puts "Backup files for #{m} are deleted."
    }
    v.clear_backups
    puts "Backup files for #{File.basename( v.config_file )}"
  end

  desc "shutdown all running & saved vms"
  task :shutdown_all do
    v = VboxConfigAdmin.new
    v.machines.each { |m|
      v.poweroff( m )
    }
  end
end

#
# tasks for each machines
#
VboxConfigAdmin.new.machines.each { |m|
  namespace m do
    desc "getextradata from #{m}"
    task :getextradata do
      VboxConfigAdmin.new.getextradata( m )
    end

    desc "backup files of #{m}"
    task :backup_files do
      puts VboxConfigAdmin.new.backup_files( m )
    end

    desc "create backup for #{m}"
    task :create_backup do
      VboxConfigAdmin.new.create_backup( m )
      puts "backup created."
    end

    desc "clear backup files for #{m}"
    task :clear_backups do
      VboxConfigAdmin.new.clear_backups( m )
      puts "Backup files are deleted."
    end

    desc "open config file for #{m}"
    task :open_config do
      VboxConfigAdmin.new.open_config( m )
    end

    desc "open latest backup for #{m}"
    task :open_latest_backup do
      VboxConfigAdmin.new.open_latest_backup( m )
    end
  end
}

#
# default task
#
task :default do
  app = Rake.application
  app.instance_eval {
    @name = File.basename( __FILE__ )
  }
  app.options.show_task_pattern = Regexp.new('')
  app.display_tasks_and_comments
end
